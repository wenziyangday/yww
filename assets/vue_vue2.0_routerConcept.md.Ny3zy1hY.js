import{_ as e,c as t,o,V as i}from"./chunks/framework.9nulytGH.js";const m=JSON.parse('{"title":"路由综述","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"vue/vue2.0/routerConcept.md","filePath":"vue/vue2.0/routerConcept.md"}'),l={name:"vue/vue2.0/routerConcept.md"},r=i('<h1 id="路由综述" tabindex="-1">路由综述 <a class="header-anchor" href="#路由综述" aria-label="Permalink to &quot;路由综述&quot;">​</a></h1><blockquote><p>Vue Router 是 Vue.js 官方的路由管理器，用于构建单页面应用 (SPA)。它提供了一种在 Vue.js 应用中管理导航的方式，包括路由映射、路由参数、路由导航、路由拦截等功能。Vue Router 的核心功能包括：</p></blockquote><ol><li>路由映射： 将 URL 映射到对应的组件，实现页面的路由跳转。</li><li>路由参数： 支持动态路由和路由参数，可以在路由路径中使用动态占位符，从而实现根据不同参数加载不同的组件。</li><li>路由导航： 提供编程式的导航方式和声明式的导航方式，可以通过代码控制页面的跳转。</li><li>路由拦截： 提供全局前置守卫、全局后置钩子、路由独享守卫等方式，实现路由的权限控制、页面加载前的数据预加载等功能。</li><li>嵌套路由： 支持嵌套路由，可以在父子组件之间建立层级关系，实现复杂的页面布局。</li><li>路由懒加载： 支持路由组件的懒加载，可以按需加载路由组件，减少页面加载时间。</li><li>路由参数传递： 支持路由参数的传递，可以在路由之间传递参数，实现页面间的数据通信。</li><li>路由动画： 支持路由过渡动画，可以通过过渡效果增强页面切换的用户体验。</li><li>路由模式： 支持多种路由模式，包括 hash 模式、history 模式、abstract 模式等，可以根据需求选择合适的路由模式。</li><li>路由事件： 提供路由相关的事件钩子，可以监听路由变化并做相应的处理，如记录页面浏览历史、统计路由跳转次数等。</li></ol><p>这些核心功能使得 Vue Router 成为构建 Vue.js 单页面应用的重要工具，能够帮助开发者管理应用的路由导航、状态和页面布局，提高开发效率和用户体验。</p>',4),a=[r];function s(u,c,_,n,p,d){return o(),t("div",null,a)}const V=e(l,[["render",s]]);export{m as __pageData,V as default};
